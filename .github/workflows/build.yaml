on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch submodules
      run: |
          git submodule update --init --recursive #--depth=1
          # ( cd vendor/micropython/ports/unix ; make submodules )
          # ( cd vendor/micropython/ports/esp32 ; make submodules )

    - name: Test
      run: |
          make test

    - name: Build
      run: |
          rm -rf ./vendor/micropython/mpy-cross/build  # Workaround build failure
          docker run -t -u "$UID:$GID" -e "HOME=/app" -v "${GITHUB_WORKSPACE}:/app" -w "/app" espressif/idf:v5.4 make
      shell: bash

    - name: Upload to Golioth (Main)
      if: github.ref == 'refs/heads/main'
      run: |
        python ./tools/upload-to-golioth.py
      env:
        GOLIOTH_PROJECT: ribbit
        # Beta V4 Blueprint
        GOLIOTH_BLUEPRINT: 65c3ebd0f4542d968bf23817
        GOLIOTH_API_KEY: ${{ secrets.GOLIOTH_API_KEY }}
        GOLIOTH_ROLLOUT: true
      shell: bash

    - name: Upload to Golioth (Release)
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        python ./tools/upload-to-golioth.py
      env:
        GOLIOTH_PROJECT: ribbit
        # Production V4 Blueprint
        GOLIOTH_BLUEPRINT: 638a8a406a504ec89e7b18ee
        GOLIOTH_API_KEY: ${{ secrets.GOLIOTH_API_KEY }}
        GOLIOTH_ROLLOUT: false
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4

      with:
        name: firmware
        path: |
          firmware
